version: '3'

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

services:

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - /etc/prometheus:/etc/prometheus
      - /opt/prometheus:/prometheus
    restart: unless-stopped
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - /opt/grafana:/var/lib/grafana
    restart: unless-stopped

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'

  # cadvisor currently returning error:
  # "machine_libipmctl.go:64] There are no NVM devices!"
  # still runs fine; https://github.com/google/cadvisor/pull/3268
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    container_name: cadvisor
    ports:
      - 8082:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    command:
      - '-housekeeping_interval=10s' #cutting cpu usage
      - '-docker_only=true'
    restart: unless-stopped
    privileged: true

  uptime-kuma:
    image: louislam/uptime-kuma:latest
    container_name: uptime-kuma
    volumes:
      - /opt/uptimekuma:/app/data
    ports:
      - 3001:3001
    restart: always

  #from techno tim. security opt restricts changing of permissions.
  file-browser:
    image: filebrowser/filebrowser:latest
    container_name: file-browser
    user: 1000:1000
    ports:
      - 8383:80
    volumes:
      - /:/srv
      - /opt/filebrowser/filebrowser.db:/database.db #must be created if not already !! to do in ansible
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

  glances:
    container_name: glances
    image: nicolargo/glances:latest-full
    restart: always
    pid: host
    network_mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /run/user/1000/podman/podman.sock:/run/user/1000/podman/podman.sock
    ports:
      - 61208-61209:61208-61209
    environment:
      - "GLANCES_OPT=-w"

# MINECRAFT STACK
  mc-rcon-web-admin:
    container_name: mc-rcon-web-admin
    image: itzg/rcon
    environment:
      RWA_USERNAME: admin
      RWA_PASSWORD: admin
      RWA_ADMIN: "TRUE"
      RWA_RCON_HOST: mc-server
      # needs to match the RCON_PASSWORD configured for the container
      RWA_RCON_PASSWORD: "demo" #change this
    ports:
      - "4326:4326"
      - "4327:4327"
    restart: unless-stopped

  mc-server: # !!! Docker Compose generator https://setupmc.com/java-server/
    profiles: ["server"] #will not start with "docker-compose up" unless profile is specified: sudo docker compose --profile server up -d
    container_name: mc-server
    hostname: mc-server
    image: itzg/minecraft-server:latest
    tty: true
    stdin_open: true
    ports:
      - "25565:25565"
    environment:
      TZ: "America/Los_Angeles"
      EULA: "TRUE"
      MOTD: "...and we're live."
      ICON: "minecraft-config/icon_minerva_64.png"
      LEVEL: "gooner25"
      MAX_PLAYERS: "10"
      DIFFICULTY: "3"
      PVP: "true"
      SIMULATION_DISTANCE: "12"
      VIEW_DISTANCE: "12"
      ENABLE_WHITELIST: "true"
      WHITELIST: |
        BryTheGuy
      OPS: |
        BryTheGuy
      RCON_CMDS_STARTUP:  |-
        gamerule playersSleepingPercentage 1
      PAUSE_WHEN_EMPTY_SECONDS: "300"
      ENABLE_ROLLING_LOGS: "true"
      LOG_TIMESTAMP: "true"
      RCON_PASSWORD: "demo" #change this
      TYPE: "FABRIC"
      VERSION: "1.21.5"
      MEMORY: "32768M"
      USE_AIKAR_FLAGS: true
    volumes:
      - "/opt/minecraft/data:/data"
    restart: on-failure

  mc-monitor: #default port 8080
    container_name: mc-monitor
    image: itzg/mc-monitor
    command: export-for-prometheus
    environment:
      EXPORT_SERVERS: mc-server
      DEBUG: "true"
    restart: on-failure
    depends_on:
      - mc-server

networks:
  network:
    name: minerva_network
    external: true
