version: "3"

services:

  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    ports:
      - 3002:3000
    volumes:
      - /opt/homepage/config:/app/config # Make sure your local config directory exists
      - /opt/homepage/images:/app/public/images
      - /media/drive2:/media/drive2
      - /var/run/docker.sock:/var/run/docker.sock:ro # (optional) For docker integrations

  tailscale: 
      container_name: tailscale 
      hostname: minerva
      image: tailscale/tailscale:latest 
      volumes: 
        - ./tailscale:/var/lib          # State data will be stored in this directory 
        - /dev/net/tun:/dev/net/tun     # Required for tailscale to work 
      cap_add:                          # Required for tailscale to work 
        - net_admin 
        - sys_module 
      command: tailscaled 
      privileged: true 
      restart: unless-stopped

  nginxproxymanager:
    image: 'jc21/nginx-proxy-manager:latest' 
    container_name: nginxproxymanager
    restart: unless-stopped 
    ports:
      - '80:80'
      - '81:81'
      - '443:443' 
    volumes:
      - /opt/nginx/data:/data
      - /opt/nginx/letsencrypt:/etc/letsencrypt 
    networks:
      - network

  nextcloud:
    image: lscr.io/linuxserver/nextcloud:latest
    container_name: nextcloud
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
    volumes:
      - /media/drive2/nextcloud/appdata:/config 
      - /media/drive2/nextcloud/data:/data
    restart: unless-stopped
    networks:
      - network 

  homeassistant:
    container_name: home-assistant
    image: "ghcr.io/home-assistant/home-assistant:latest"
    ports:
      - "8123:8123"
    volumes:
      - /opt/hass:/config
      - /etc/localtime:/etc/localtime:ro
      - /dev/serial/ttyUSB0/:/dev/serial/ttyUSB0
    devices:
      - /dev/serial/ttyUSB0/:/dev/serial/by-id
    restart: unless-stopped
    privileged: true
    network_mode: host #required for hass

  speedtest-tracker:
    container_name: speedtest-tracker
    ports:
     - '8081:80'
     - '8443:443'
    environment:
     - PUID=1000
     - PGID=1000
    volumes:
     - '/path/to/directory:/config'
     - '/path/to/directory/web:/etc/ssl/web'
    image: 'ghcr.io/alexjustesen/speedtest-tracker:latest'
    restart: unless-stopped
    networks:
      - network
  
  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin 
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
    volumes:
      - /media/drive2/jellyfin/config:/config
      - /media/drive2/torrents:/data
    ports:
      - 8096:8096 # Http webUI.
      # - 8920:8920 #optional - Https webUI (you need to set up your own certificate).
      - 7359:7359/udp #optional - Allows clients to discover Jellyfin on the local network.
      # - 1900:1900/udp #optional - Service discovery used by DNLA and clients.
    restart: unless-stopped
    networks:
      - network
  
  radarr:
    container_name: radarr
    image: lscr.io/linuxserver/radarr:latest
    networks:
      - network
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
    ports:
      - 7878:7878
    volumes:
      - /media/drive2/radarr/config:/config
      - /media/drive2/torrents:/downloads
    restart: "unless-stopped"

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    networks:
      - network
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
    volumes:
      - /media/drive2/sonarr/config:/config
      - /media/drive2/torrents:/downloads
    ports:
      - 8989:8989
    restart: unless-stopped

  prowlarr:
    container_name: prowlarr
    image: lscr.io/linuxserver/prowlarr:latest

    # Uncomment below if vpn is enabled
    # depends_on:               # Uncomment this line if vpn is enabled
    #   - vpn                   # Uncomment this line if vpn is enabled
    # network_mode: service:vpn # Uncomment this line if vpn is enabled

    networks:               # Comment this line if vpn is enabled
      - network           # Comment this line if vpn is enabled
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
    volumes:
      - /media/drive2/prowlarr/config:/config
    # Comment below ports if VPN is enabled.
    ports:
      - 9696:9696
    restart: unless-stopped

  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
    volumes:
      - /media/drive2/sabnzbd/config:/config
      - /media/drive2/torrents:/downloads #optional
      - /media/drive2/sabnzbd/incomplete:/incomplete-downloads #optional
    ports:
      - 8181:8080
    restart: unless-stopped

#  adguardhome:
#    image: adguard/adguardhome
#    container_name: adguardhome
#    ports:
#     - 53:53/tcp #plain dns
#     - 53:53/udp #plain dns
#     #- 67:67/udp #add if you intend to use AdGuard Home as a DHCP server
#     #- 68:68/udp #add if you intend to use AdGuard Home as a DHCP server
#     #- 68:68/tcp #add if you intend to use AdGuard Home as a DHCP server
#     - 85:80/tcp #
#     #- 443:443/tcp
#     #- 443:443/udp
#     - 3005:3000/tcp
#     #- 853:853/tcp
#     #- 784:784/udp
#     #- 853:853/udp
#     #- 8853:8853/udp
#     #- 5443:5443/tcp
#     #- 5443:5443/udp
#    volumes:
#      - /opt/adguardhome/work:/opt/adguardhome/work
#      - /opt/adguardhome/conf:/opt/adguardhome/conf
#    restart: unless-stopped

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      # - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
      - "86:80/tcp"
    environment:
      TZ: 'America/Los_Angeles'
      # docker exec -it pihole_container_name pihole -a -p
    # WEBPASSWORD: 'set a secure password here or it will be random'
    volumes:
      - '/opt/pihole/etc-pihole:/etc/pihole'
      - '/opt/pihole/etc-dnsmasq.d:/etc/dnsmasq.d'
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    # cap_add:
      # - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
    restart: unless-stopped  

networks:
  network:
    name: minerva_network
    external: true

#  pihole:
#    container_name: pihole
#    image: pihole/pihole:latest
#    # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
#    ports:
#      - "53:53/tcp"
#      - "53:53/udp"
      # - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
#      - "80:80/tcp"
#    environment:
#      TZ: 'America/Los_Angeles'
      # WEBPASSWORD: 'set a secure password here or it will be random'
    # Volumes store your data between container upgrades
#    volumes:
#      - './etc-pihole:/etc/pihole'
#      - './etc-dnsmasq.d:/etc/dnsmasq.d'
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    # cap_add:
      # - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
#    restart: unless-stopped